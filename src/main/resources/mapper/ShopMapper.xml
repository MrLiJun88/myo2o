<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyit.www.dao.ShopDao">

    <resultMap id="shopMap" type="com.hyit.www.entity.Shop">
        <!-- column对应数据库中的字段名，property对应实体类中的成员变量名-->
        <id column="shop_id" property="shopId"></id>
        <result column="shop_name" property="shopName"/>
        <result column="shop_desc" property="shopDesc"/>
        <result column="shop_addr" property="shopAddr" />
        <result column="phone" property="phone" />
        <result column="priority" property="priority"/>
        <result column="shop_img" property="shopImg" />
        <result column="create_time" property="createTime" />
        <result column="last_edit_time" property="lastEditTime" />
        <result column="enable_status" property="enableStatus" />
        <result column="advice" property="advice"/>
        <!-- 复合对象-->
        <association column="area_id" property="area" javaType="com.hyit.www.entity.Area">
            <id column="area_id" property="areaId"/>
            <result column="area_name" property="areaName"/>
        </association>
        <association column="owner_id" property="owner" javaType="com.hyit.www.entity.PersonInfo">
            <id column="user_id" property="userId"/>
            <result column="name" property="name"/>
        </association>
        <association column="shop_category_id" property="shopCategory" javaType="com.hyit.www.entity.ShopCategory">
            <id column="shop_category_id" property="shopCategoryId"/>
            <result column="shop_category_name" property="shopCategoryName"/>
        </association>
    </resultMap>
    
    <!-- 插入新的店铺-->
    <insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
        INSERT INTO tb_shop(owner_id, area_id, shop_category_id,
         shop_name, shop_desc, shop_addr, phone,
         shop_img, priority, create_time, last_edit_time,enable_status,advice)
         VALUES
         (#{owner.userId},#{area.areaId},#{shopCategory.shopCategoryId},#{shopName},
         #{shopDesc},#{shopAddr},#{phone},#{shopImg},#{priority},#{createTime},#{lastEditTime},
         #{enableStatus},#{advice}
         )
    </insert>

    <!-- 更新店铺信息-->
    <update id="updateShop" parameterType="com.hyit.www.entity.Shop">
        update tb_shop
        <set>
            <if test="shopName != null">shop_name = #{shopName},</if>
            <if test="shopDesc != null">shop_desc = #{shopDesc},</if>
            <if test="shopAddr != null">shop_addr = #{shopAddr},</if>
            <if test="phone != null">phone=#{phone},</if>
            <if test="shopImg != null">shop_img=#{shopImg},</if>
            <if test="priority != null">priority=#{priority},</if>
            <if test="lastEditTime != null">last_edit_time=#{lastEditTime},</if>
            <if test="enableStatus != null">enable_status=#{enableStatus},</if>
            <if test="advice != null">advice=#{advice},</if>
            <if test="shopCategory != null">shop_category_id=#{shopCategory.shopCategoryId},</if>
            <if test="area != null">area_id=#{area.areaId} </if>
        </set>
        where shop_id = #{shopId}
    </update>

    <!-- 根据shopId，查询店铺信息-->
    <select id="queryByShopId" resultMap="shopMap" parameterType="long">
        SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s
		JOIN tb_shop_category sc
		ON s.`shop_category_id`=sc.`shop_category_id`
		JOIN tb_area a
		ON a.`area_id`=s.`area_id`
		WHERE s.`shop_id`=#{shopId}
    </select>

    <!-- 模糊查询，根据条件搜索所有符合条件的Shop的集合-->
    <select id="queryShopList" resultMap="shopMap">
        SELECT
        s.shop_id,
        s.shop_name,
        s.shop_desc,
        s.shop_addr,
        s.phone,
        s.shop_img,
        s.priority,
        s.create_time,
        s.last_edit_time,
        s.enable_status,
        s.advice,
        a.area_id,
        a.area_name,
        sc.shop_category_id,
        sc.shop_category_name
        FROM
        tb_shop s,
        tb_area a,
        tb_shop_category sc
        <where>
            <include refid="selectShopByCondition"/>
        </where>
        AND	s.area_id = a.area_id
        AND s.shop_category_id = sc.shop_category_id
        ORDER BY s.priority DESC
        LIMIT #{rowIndex} , #{pageSize}
    </select>

    <!-- 根据模糊查询获取到符合条件的Shop集合数量-->
    <select id="queryShopCount" resultType="int">
        SELECT count(1)
        FROM
        tb_shop s,
        tb_area a,
        tb_shop_category sc
        <where>
            <include refid="selectShopByCondition"/>
        </where>
        AND	s.area_id = a.area_id
        AND s.shop_category_id = sc.shop_category_id
    </select>

    <!-- 根据多条件实现模糊查询-->
    <sql id="selectShopByCondition">
        1=1
        <!-- 可输入的查询条件：
            商铺名（要求模糊查询）
            区域Id
            商铺状态
            商铺类别
            owner
        (注意在sqlmapper中按照前端入参拼装不同的查询语句) -->
        <!-- 商铺名（要求模糊查询） -->
        <if test="shopCondition.shopName != null and '' != shopCondition.shopName">
            <!--  两种写法都可以 注意第二种是 ${}传值 -->
            <!--
            #{}和${}
            #{}表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，
                #{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。
                 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。

            ${}表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换，
                ${}可以接收简单类型值或pojo属性值，
                如果parameterType传输单个简单类型值，${}括号中只能是value。
             -->
            <!-- and s.shop_name like concat('%',#{shopCondition.shopName},'%')-->
            and s.shop_name like '%${shopCondition.shopName}%'
        </if>
        <!-- 区域Id  -->
        <if test="shopCondition.area != null and shopCondition.area.areaId != null ">
            and s.area_id = #{shopCondition.area.areaId}
        </if>
        <!-- 店铺状态  -->
        <if test="shopCondition.enableStatus !=null">
            and s.enable_status = #{shopCondition.enableStatus}
        </if>
        <!-- 店铺类别  -->
        <if test="shopCondition.shopCategory != null and shopCondition.shopCategory.shopCategoryId != null ">
            and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
        </if>
        <!-- 取出父类类别下的店铺  -->
        <if test="shopCondition.shopCategory != null and shopCondition.shopCategory.parent != null
		and shopCondition.shopCategory.parent.shopCategoryId != null">
            and s.shop_category_id in (SELECT shop_category_id FROM tb_shop_category
            WHERE parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
        </if>
        <!-- owner  -->
        <if test="shopCondition.owner != null and shopCondition.owner.userId != null">
            and s.owner_id = #{shopCondition.owner.userId}
        </if>
    </sql>
</mapper>
